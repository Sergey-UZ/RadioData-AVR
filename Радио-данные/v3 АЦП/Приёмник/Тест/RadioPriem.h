/*
	 Project  : Приём данных по радио-каналу
	 Version  : 3
	 Date     : 24.10.2023
	 Author   : Sergey
	 Chip     : AVR
	 Comments : 
	 						Входной радио-сигнал на любой вывод ADC
	 						Только одна скорость передачи данных по радио-каналу
	 							равная (приблизительно периуд 1-во бита = 1 миллисекунда (1000 бит/сек))
	 						Требуется 1 АЦП (аналого-цыфровой преобразователь ADC), который
	 						будет работать в монопольном режиме. Перед его включением нужно 
	 						мультиплексером выбрать PIN к которому поступает входной радио-сигнал и 
	 						больше мультиплексер не переключать.
	 						Настроить режим работы АЦП:
	 							В режиме непрерывного преобразования
	 							Разрешить прерывание
	 							Источник опорного напряжения AVcc
	 							Выравнивание результата преобразования влево (бит ADLAR = 1 МК - ATMega8)
	 							Запустить преобразование
	 						(далее вычислить калькулятором)
	 							Например:
	 								Выбран микроконтроллер ATMega8A с тактированием от кварцевого резонатора
	 								частотой 4 МГц.
	 								Выбрать вариант предделителя тактовой частоты модуля АЦП чтобы он не 
	 								превышал частоту 200 кГц. Выбран вариант 125000 Гц (125 кГц).
	 								Длительность 1-во цикла преобразования АЦП = 13 тактов
	 								Тактовая частота модуля АЦП = 125000 Гц
	 								АЦП сможет сделать 125000 / 13 = 9615 измерений в секунду
	 								Так-как мы ищем результат в миллисекундах (1 секунда = 1000 миллисекунд)
	 								1 цикл преобразования АЦП = 1000 / 9615 = 0,10400416016640665627 миллисекунд
	 								Узнаем сколько нам нужно циклов преобразования АЦП для оцыфровки 1-ой миллисекунды:
	 									1 / 0,10400416016640665627 = 9,61499999999999999965 
	 									(округлим в большую сторону до целого числа) = 10
	 									Это число будет закреплено за #define CIKL_ADC_COUNT
	 								Узнаем точно сколько будет длится периуд 1-во бита для вызова 
	 								функции RadioPeredacha в радио-передатчике:
	 									0,10400416016640665627 * 10 = 1,0400416016640665627 миллисекунд
	 								Функция RadioPeredacha должна вызываться каждые 1,0400416016640665627 миллисекунд
	 							
              Манчестерское кодирование
              Входной бит данных 1 --- передаётся как сначало 1 потом 0
              Входной бит данных 0 --- передаётся как сначало 0 потом 1
              Состав входного пакета:
               * Стартовый бит (1 периуд логической 1-ницы)
               * Преамбула 1 Байт = (0b01010101)
               * Пользовательские данные (n Байт)
               * CRC 1 Байт
              Если в принятом пакете CRC не совпадает - то этот пакет тут-же удаляется
	 						
	 						Функция RadioPriem
	 							Стробирует входной радио-сигнал и выполняет его обработку
	 							Должна вызыватся в прерывании АЦП
	 								 							
	 						Функция RadioRead         
	              Копирует пользовательские данные из служебного пакета данных, 
	            	 принятого по радио-каналу и сохраняет его в пользовательский пакет данных
	            	 (Преамбулы и CRC там не будет)
	              Параметры:
	                char *Data         - Указатель на массив с пользовательским пакетом данных
	                char *FlagOwerflow - Указатель на переменную для определения потери
	                     	                предыдущего пакета 
	              Возвращаемое значение:
	                        char (1) - Пакет данных получен
	                        char (0) - Нет принятых данных
	                FlagOwerflow (1) - предыдущий пакет потерян
	                FlagOwerflow (0) - нет потери пакета
*/

#ifndef RADIO_PRIEM_INCLUDED
#define RADIO_PRIEM_INCLUDED

#include <io.h>
#include <stdint.h>

// Пользовательские настройки ==========================================
// Кол-во циклов измерения АЦП для 1-во бита
#define CIKL_ADC_COUNT               10
// Старший байт регистра данных АЦП
#define REGISTR_ADC_DATA_H           ADCH
// Кол-во пользовательских байтов в пакете
#define RADIO_PAKET_DATA_BAYT_COUNT  5
/*
	 Уровень напряжения входного радио-сигнала
	 Этот параметр относится только для признания стартового бита пакета
	 Остальные биты пакета этим параметром не пользуются
	 Сейчас он настоен для радио-приёмника модели MX-RM-5V
	 у которой пиковый уровень выходного напряжения по осциллографу 
	 не превышает 3,9 Вольт.
	 Результат работы АЦП = 255 (5 Вольт), 150 = приблизительно 3 Вольта
*/
#define RADIO_SIGNAL_IN_VOLT  150
//=======================================================================

/*
   Эта директива запрещает компилятору выдавать предупреждения о том, 
    что функция объявлена, но в программе не используется.
*/
//==================================================================================================
#pragma used+

// Прототипы функций ===============================
char RadioRead (char *Data, char *FlagOwerflow);
void RadioPriem(void);
//==================================================

/* 
   Эта директива разрешает компилятору выдавать предупреждения о том, 
    что функция объявлена, но в программе не используется.
*/
#pragma used-
#endif 